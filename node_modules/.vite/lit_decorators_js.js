import {
  customElement
} from "./chunk-UEDVBQNC.js";
import {
  property
} from "./chunk-NZ5SKDK4.js";

// .yarn/cache/@lit-reactive-element-npm-1.0.0-rc.2-bb65b71e5a-9262c29596.zip/node_modules/@lit/reactive-element/development/decorators/state.js
function state(options) {
  return property({
    ...options,
    state: true,
    attribute: false
  });
}

// .yarn/cache/@lit-reactive-element-npm-1.0.0-rc.2-bb65b71e5a-9262c29596.zip/node_modules/@lit/reactive-element/development/decorators/base.js
var decorateProperty = ({ finisher, descriptor }) => (protoOrDescriptor, name) => {
  var _a;
  if (name !== void 0) {
    const ctor = protoOrDescriptor.constructor;
    if (descriptor !== void 0) {
      Object.defineProperty(protoOrDescriptor, name, descriptor(name));
    }
    finisher === null || finisher === void 0 ? void 0 : finisher(ctor, name);
  } else {
    const key = (_a = protoOrDescriptor.originalKey) !== null && _a !== void 0 ? _a : protoOrDescriptor.key;
    const info = descriptor != void 0 ? {
      kind: "method",
      placement: "prototype",
      key,
      descriptor: descriptor(protoOrDescriptor.key)
    } : { ...protoOrDescriptor, key };
    if (finisher != void 0) {
      info.finisher = function(ctor) {
        finisher(ctor, key);
      };
    }
    return info;
  }
};

// .yarn/cache/@lit-reactive-element-npm-1.0.0-rc.2-bb65b71e5a-9262c29596.zip/node_modules/@lit/reactive-element/development/decorators/event-options.js
function eventOptions(options) {
  return decorateProperty({
    finisher: (ctor, name) => {
      Object.assign(ctor.prototype[name], options);
    }
  });
}

// .yarn/cache/@lit-reactive-element-npm-1.0.0-rc.2-bb65b71e5a-9262c29596.zip/node_modules/@lit/reactive-element/development/decorators/query.js
function query(selector, cache) {
  return decorateProperty({
    descriptor: (name) => {
      const descriptor = {
        get() {
          var _a;
          return (_a = this.renderRoot) === null || _a === void 0 ? void 0 : _a.querySelector(selector);
        },
        enumerable: true,
        configurable: true
      };
      if (cache) {
        const key = typeof name === "symbol" ? Symbol() : `__${name}`;
        descriptor.get = function() {
          var _a;
          if (this[key] === void 0) {
            this[key] = (_a = this.renderRoot) === null || _a === void 0 ? void 0 : _a.querySelector(selector);
          }
          return this[key];
        };
      }
      return descriptor;
    }
  });
}

// .yarn/cache/@lit-reactive-element-npm-1.0.0-rc.2-bb65b71e5a-9262c29596.zip/node_modules/@lit/reactive-element/development/decorators/query-all.js
function queryAll(selector) {
  return decorateProperty({
    descriptor: (_name) => ({
      get() {
        var _a;
        return (_a = this.renderRoot) === null || _a === void 0 ? void 0 : _a.querySelectorAll(selector);
      },
      enumerable: true,
      configurable: true
    })
  });
}

// .yarn/cache/@lit-reactive-element-npm-1.0.0-rc.2-bb65b71e5a-9262c29596.zip/node_modules/@lit/reactive-element/development/decorators/query-async.js
function queryAsync(selector) {
  return decorateProperty({
    descriptor: (_name) => ({
      async get() {
        var _a;
        await this.updateComplete;
        return (_a = this.renderRoot) === null || _a === void 0 ? void 0 : _a.querySelector(selector);
      },
      enumerable: true,
      configurable: true
    })
  });
}

// .yarn/cache/@lit-reactive-element-npm-1.0.0-rc.2-bb65b71e5a-9262c29596.zip/node_modules/@lit/reactive-element/development/decorators/query-assigned-nodes.js
var ElementProto = Element.prototype;
var legacyMatches = ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;
function queryAssignedNodes(slotName = "", flatten = false, selector = "") {
  return decorateProperty({
    descriptor: (_name) => ({
      get() {
        var _a, _b;
        const slotSelector = `slot${slotName ? `[name=${slotName}]` : ":not([name])"}`;
        const slot = (_a = this.renderRoot) === null || _a === void 0 ? void 0 : _a.querySelector(slotSelector);
        let nodes = (_b = slot) === null || _b === void 0 ? void 0 : _b.assignedNodes({ flatten });
        if (nodes && selector) {
          nodes = nodes.filter((node) => node.nodeType === Node.ELEMENT_NODE && (node.matches ? node.matches(selector) : legacyMatches.call(node, selector)));
        }
        return nodes;
      },
      enumerable: true,
      configurable: true
    })
  });
}
export {
  customElement,
  eventOptions,
  property,
  query,
  queryAll,
  queryAssignedNodes,
  queryAsync,
  state
};
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
//# sourceMappingURL=lit_decorators_js.js.map
